
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 543faed9c8c, clang++ 16.0.6 -fPIC -Os)

Loaded SDC plugin
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend: /home/rtsang/.volare/volare/sky130/versions/bdc9412b3e468c102d01b7cf6337be06ec6e9c9a/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: /home/rtsang/chipalooza/sky130_ajc_ip__overvoltage/openlane/overvoltage_dig/overvoltage_dig.v
Parsing SystemVerilog input from `/home/rtsang/chipalooza/sky130_ajc_ip__overvoltage/openlane/overvoltage_dig/overvoltage_dig.v' to AST representation.
Generating RTLIL representation for module `\overvoltage_dig'.
Note: Assuming pure combinatorial block at /home/rtsang/chipalooza/sky130_ajc_ip__overvoltage/openlane/overvoltage_dig/overvoltage_dig.v:9.3-28.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \overvoltage_dig

3.2. Analyzing design hierarchy..
Top module:  \overvoltage_dig
Removed 0 unused modules.
Renaming module overvoltage_dig to overvoltage_dig.

4. Executing PROC pass (convert processes to netlists).

4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$/home/rtsang/chipalooza/sky130_ajc_ip__overvoltage/openlane/overvoltage_dig/overvoltage_dig.v:9$1 in module overvoltage_dig.
Marked 1 switch rules as full_case in process $proc$/home/rtsang/chipalooza/sky130_ajc_ip__overvoltage/openlane/overvoltage_dig/overvoltage_dig.v:9$1 in module overvoltage_dig.
Removed a total of 1 dead cases.

4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 1 assignment to connection.

4.4. Executing PROC_INIT pass (extract init attributes).

4.5. Executing PROC_ARST pass (detect async resets in processes).

4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 1 switch.

4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\overvoltage_dig.$proc$/home/rtsang/chipalooza/sky130_ajc_ip__overvoltage/openlane/overvoltage_dig/overvoltage_dig.v:9$1'.
     1/1: $1\otrip_decoded[15:0]

4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\overvoltage_dig.\otrip_decoded' from process `\overvoltage_dig.$proc$/home/rtsang/chipalooza/sky130_ajc_ip__overvoltage/openlane/overvoltage_dig/overvoltage_dig.v:9$1'.

4.9. Executing PROC_DFF pass (convert process syncs to FFs).

4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\overvoltage_dig.$proc$/home/rtsang/chipalooza/sky130_ajc_ip__overvoltage/openlane/overvoltage_dig/overvoltage_dig.v:9$1'.
Removing empty process `overvoltage_dig.$proc$/home/rtsang/chipalooza/sky130_ajc_ip__overvoltage/openlane/overvoltage_dig/overvoltage_dig.v:9$1'.
Cleaned up 1 empty switch.

4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module overvoltage_dig.

End of script. Logfile hash: a591a10eea, CPU: user 0.26s system 0.01s, MEM: 52.38 MB peak
Yosys 0.38 (git sha1 543faed9c8c, clang++ 16.0.6 -fPIC -Os)
Time spent: 69% 2x read_liberty (0 sec), 22% 1x proc_dff (0 sec), ...
